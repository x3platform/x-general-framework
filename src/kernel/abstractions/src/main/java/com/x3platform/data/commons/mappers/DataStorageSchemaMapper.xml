<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x3platform.data.commons.mappers.DataStorageSchemaMapper">
  <resultMap id="BaseResultMap" type="com.x3platform.data.commons.models.DataStorageSchema">
    <result property="id" jdbcType="VARCHAR" column="id"/>
    <result property="name" jdbcType="VARCHAR" column="name"/>
    <result property="options" jdbcType="VARCHAR" column="options"/>
    <result property="storageAdapterClassName" jdbcType="VARCHAR" column="storage_adapter_class_name"/>
    <result property="orderId" jdbcType="VARCHAR" column="order_id"/>
    <result property="modifiedDate" jdbcType="TIMESTAMP" column="modified_date"/>
    <result property="createdDate" jdbcType="TIMESTAMP" column="created_date"/>
  </resultMap>
  <sql id="Select_Where_Clause">
    <where>
      <if test="param_id != null and param_id != ''">
        AND t.id = #{param_id}
      </if>
      <if test="param_name != null and param_name != ''">
        AND t.name = #{param_name}
      </if>
      <if test="param_options != null and param_options != ''">
        AND t.options = #{param_options}
      </if>
      <if test="param_storage_adapter_class_name != null and param_storage_adapter_class_name != ''">
        AND t.storage_adapter_class_name = #{param_storage_adapter_class_name}
      </if>
      <if test="param_order_id != null and param_order_id != ''">
        AND t.order_id = #{param_order_id}
      </if>
      <if test="param_modified_date != null">
        AND t.modified_date = #{param_modified_date}
      </if>
      <if test="param_created_date != null">
        AND t.created_date = #{param_created_date}
      </if>
    </where>
  </sql>
  <insert id="insert" parameterType="com.x3platform.data.commons.models.DataStorageSchema">
    INSERT INTO data_storage_schema
    (
      id,
      name,
      options,
      storage_adapter_class_name,
      order_id,
      modified_date,
      created_date
    )
    VALUES
    (
      #{id,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{options,jdbcType=VARCHAR},
      #{storageAdapterClassName,jdbcType=VARCHAR},
      #{orderId,jdbcType=VARCHAR},
      CURRENT_TIMESTAMP,
      CURRENT_TIMESTAMP
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.x3platform.data.commons.models.DataStorageSchema">
    UPDATE data_storage_schema SET

      name = #{name,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      storage_adapter_class_name = #{storageAdapterClassName,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      modified_date = CURRENT_TIMESTAMP

    WHERE id = #{id}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    DELETE FROM data_storage_schema WHERE id = #{id}
  </delete>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM data_storage_schema WHERE id = #{id}
  </select>
  <select id="findOneByApplicationId" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM data_storage_schema
    LEFT JOIN data_storage_schema_application ON data_storage_schema_application.storage_schema_id = data_storage_schema.id
    WHERE data_storage_schema_application.application_id = #{application_id}
    LIMIT 0,1
  </select>
  <select id="findOneByApplicationName" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT * FROM data_storage_schema
    LEFT JOIN data_storage_schema_application ON data_storage_schema_application.storage_schema_id = data_storage_schema.id
    WHERE data_storage_schema_application.application_id IN (
      SELECT id from application WHERE application_name = #{application_name})
    LIMIT 0,1
  </select>
  <select id="findAll" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT * FROM data_storage_schema t
    <if test="_parameter != null">
      <include refid="Select_Where_Clause"/>
    </if>
    <if test="orders != null and orders.size() > 0">
      ORDER BY
      <foreach collection="orders" item="order" index="index" separator=",">
        ${order}
      </foreach>
    </if>
    <if test="length > 0">
      LIMIT 0, ${length}
    </if>
  </select>
  <select id="isExist" resultType="boolean">
    SELECT COUNT(0) AS "Count" FROM data_storage_schema WHERE id = #{id}
  </select>
  <select id="getCombobox" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT * FROM data_storage_schema;
  </select>
</mapper>
