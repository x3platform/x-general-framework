package com.x3platform.util;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;

import org.junit.Test;

public class StringUtilTests {

  @Test
  public void testReplace() {
    String text = " ,.，。";
    text = text.replaceAll(" |,|.|，|。", "");
    assertEquals("", text);
  }

  @Test
  public void testUnicodeEncode() {
    String text = StringUtil.unicodeEncode("中文");
    assertEquals("\"中文\" should return \"\\u4e2d\\u6587\"", "\\u4e2d\\u6587", text);

    text = StringUtil.unicodeEncode("Hello");
    assertEquals("\"Hello\" should return \"\\u0048\\u0065\\u006c\\u006c\\u006f\"",
      "\\u0048\\u0065\\u006c\\u006c\\u006f", text);
  }

  @Test
  public void testUnicodeDecode() {
    String text = StringUtil.unicodeDecode("\\u4e2d\\u6587");

    assertEquals("\"\\u4e2d\\u6587\" should return \"中文\"", "中文", text);
  }

  // 测试随机字符串
  @Test
  public void testToRandom() {
    String randomText1 = StringUtil.toRandom(8);
    String randomText2 = StringUtil.toRandom(8);

    assertEquals("randomText1.length() should return 8", 8, randomText1.length());
    assertEquals("randomText2.length() should return 8", 8, randomText2.length());
    assertFalse("randomText1.equals(randomText2) should return 'false'", randomText1.equals(randomText2));
  }

  @Test
  public void testToBase64() {
    String result = StringUtil.toBase64("abc");
    assertTrue("StringUtil.toBase64 should return 'true'", result.length() > 0);
  }

  @Test
  public void testCamelToUnderline() {
    String result = StringUtil.camelToUnderline("abcDefGhi");
    assertEquals("abc_def_ghi", result);
  }

  @Test
  public void testUnderlineToCamel() {
    String result = StringUtil.underlineToCamel("abc_def_ghi");
    assertEquals("abcDefGhi", result);
  }

  @Test
  public void toNumber() {
    String result = StringUtil.toNumber(1, "0000");
    assertEquals("0001", result);
  }

  @Test
  public void testToUuid() {
    String result = StringUtil.toUuid();
    assertTrue("StringUtil.toBase64 should return 'true'", result.length() > 0);
  }

  @Test
  public void testTo8DigitUuid() {
    String result = StringUtil.to8DigitUuid();
    assertTrue("StringUtil.to8DigitUuid should return 'true'", result.length() > 0);
  }

  @Test
  public void testFormat() {
    String result = StringUtil.format("a {} c", "b");
    assertEquals("StringUtil.format should return 'a b c'", "a b c", result);
  }
}
