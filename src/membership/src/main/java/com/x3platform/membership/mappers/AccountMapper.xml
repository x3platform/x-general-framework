<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.x3platform.membership.mappers.AccountMapper">
  <resultMap id="findOne_Result" type="com.x3platform.membership.models.AccountInfo" >
    <result property="id" column="id" />
    <result property="code" column="code" />
    <result property="name" column="name" />
    <result property="globalName" column="global_name" />
    <result property="displayName" column="display_name" />
    <result property="pinyin" column="pinyin" />
    <result property="loginName" column="login_name" />
    <result property="passwordSalt" column="password_salt" />
    <result property="passwordChangedDate" column="password_changed_date" />
    <result property="identityCard" column="identity_card" />
    <result property="type" column="type" />
    <result property="certifiedMobile" column="certified_telephone" />
    <result property="certifiedEmail" column="certified_email" />
    <result property="certifiedAvatar" column="certified_avatar" />
    <result property="enableEmail" column="enable_email" />
    <result property="locking" column="locking" />
    <result property="orderId" column="order_id" />
    <result property="status" column="status" />
    <result property="remark" column="remark" />
    <result property="ip" column="ip" />
    <result property="loginDate" column="login_date" />
    <result property="distinguishedName" column="distinguished_name" />
    <result property="modifiedDate" column="modified_date" />
    <result property="createdDate" column="created_date" />
  </resultMap>
  <resultMap id="findAll_Result" type="com.x3platform.membership.models.AccountInfo">
    <result property="id" column="id" />
    <result property="code" column="code" />
    <result property="name" column="name" />
    <result property="globalName" column="global_name" />
    <result property="displayName" column="display_name" />
    <result property="pinyin" column="pinyin" />
    <result property="loginName" column="login_name" />
    <result property="passwordSalt" column="password_salt" />
    <result property="passwordChangedDate" column="password_changed_date" />
    <result property="identityCard" column="identity_card" />
    <result property="type" column="type" />
    <result property="certifiedMobile" column="certified_telephone" />
    <result property="certifiedEmail" column="certified_email" />
    <result property="certifiedAvatar" column="certified_avatar" />
    <result property="enableEmail" column="enable_email" />
    <result property="locking" column="locking" />
    <result property="orderId" column="order_id" />
    <result property="status" column="status" />
    <result property="remark" column="remark" />
    <result property="ip" column="ip" />
    <result property="loginDate" column="login_date" />
    <result property="distinguishedName" column="distinguished_name" />
    <result property="modifiedDate" column="modified_date" />
    <result property="createdDate" column="created_date" />
  </resultMap>
  <insert id="insert" parameterType="com.x3platform.membership.models.AccountInfo">
    INSERT INTO sys_account(
        id,
        code,
        name,
        global_name,
        display_name,
        pinyin,
        login_name,
        password,
        password_salt,
        password_changed_date,
        identity_card,
        type,
        certified_telephone,
        certified_email,
        certified_avatar,
        enable_email,
        locking,
        order_id,
        status,
        remark,
        ip,
        login_date,
        distinguished_name,
        modified_date,
        created_date
    ) VALUES (
        #{id},
        #{code},
        #{name},
        #{globalName},
        #{displayName},
        #{pinYin},
        #{loginName},
        #{password},
        #{passwordSalt},
        #{passwordChangedDate},
        #{identityCard},
        #{type},
        #{certifiedMobile},
        #{certifiedEmail},
        #{certifiedAvatar},
        #{enableEmail},
        #{locking},
        #{orderId},
        #{status},
        #{remark},
        #{ip},
        #{loginDate},
        #{distinguishedName},
        CURRENT_TIMESTAMP,
        CURRENT_TIMESTAMP
      )
  </insert>
  <update id="update" parameterType="com.x3platform.membership.models.AccountInfo">
    UPDATE sys_account SET
      code = #{code},
      name = #{name},
      global_name = #{globalName},
      display_name = #{displayName},
      pinyin = #{pinYin},
      login_name = #{loginName},
      identity_card = #{identityCard},
      type = #{type},
      enable_email = #{enableEmail},
      certified_email = #{certifiedEmail},
      certified_telephone = #{certifiedMobile},
      locking = #{locking},
      order_id = #{orderId},
      status = #{status},
      remark = #{remark},
      distinguished_name = #{distinguishedName},
      modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <delete id="delete">
    DELETE FROM sys_account WHERE id = #{id}
  </delete>
  <select id="findOne" resultMap="findOne_Result">
    SELECT * FROM sys_account WHERE id = #{id}
  </select>
  <select id="findOneByLoginName" resultMap="findOne_Result">
    SELECT *  FROM sys_account WHERE login_name = #{loginName}
  </select>
  <sql id="Select_Where_Clause">
    <where>
      <!-- 通讯录查询 -->
      <if test="var_scene == 'Contacts'">
        <if test="param_name != null and param_name != ''">
          AND (t.name Like #{param_name} OR t.login_name Like #{param_name})
        </if>
        <if test="param_status != null and param_status != ''">
          AND t.status = #{param_status}
        </if>
      </if>

      <if test="var_scene == 'default'">
        <if test="param_code != null and param_code != ''">
          AND t.code = #{param_code}
        </if>
        <if test="param_name != null and param_name != ''">
          AND t.name Like CONCAT('%',#{param_name},'%')
        </if>
        <if test="param_loginName != null and param_loginName != ''">
          AND t.login_name Like CONCAT('%',#{param_loginName},'%')
        </if>
        <if test="param_globalName != null and param_globalName != ''">
          AND t.global_name Like CONCAT('%',#{param_globalName},'%')
        </if>
        <if test="param_displayName != null and param_displayName != ''">
          AND t.display_name Like CONCAT('%',#{param_displayName},'%')
        </if>
        <if test="param_pinYin != null and param_pinYin != ''">
          AND t.pinyin Like CONCAT('%',#{param_pinYin},'%')
        </if>
        <if test="param_type != null and param_type != ''">
          AND t.type = #{param_type}
        </if>
        <if test="param_locking != null and param_locking != ''">
          AND t.locking = #{param_locking}
        </if>
        <if test="param_status != null and param_status != ''">
          AND t.status = #{param_status}
        </if>
        <if test="param_certifiedMobile != null and param_certifiedMobile != ''">
          AND t.certified_telephone = #{param_certifiedMobile}
        </if>
      </if>
    </where>
  </sql>
  <select id="findAll" parameterType="java.util.Map" resultMap="findAll_Result">
    SELECT * FROM sys_account t
    <if test="_parameter != null">
      <include refid="Select_Where_Clause" />
    </if>
    <if test="orders != null and orders.size() > 0">
      <foreach collection="orders" item="order" index="index" separator="," >
        ${order}
      </foreach>
    </if>
    <if test="length > 0">
      LIMIT 0, ${length}
    </if>
  </select>

  <select id="queryAll" parameterType="java.util.Map" resultMap="findAll_Result">
    SELECT DISTINCT t.*
    FROM
    sys_account t left join sys_account_organization_unit o on (t.id = o.account_id)
    left JOIN sys_account_role ar on ( t.id = ar.account_id)
    left join sys_role r on (ar.role_id = r.id)
    WHERE
    /*t.`status` = 1*/
    1=1
    <if test="_parameter != null">
      <if test="param_name != null and param_name != ''">
        AND t.name Like CONCAT('%',#{param_name},'%')
      </if>
      <if test="param_loginName != null and param_loginName != ''">
        AND t.login_name Like CONCAT('%',#{param_loginName},'%')
      </if>
      <if test="param_displayName != null and param_displayName != ''">
        AND t.display_name Like CONCAT('%',#{param_displayName},'%')
      </if>
      <if test="param_certifiedMobile != null and param_certifiedMobile != ''">
        AND t.certified_telephone Like CONCAT('%',#{param_certifiedMobile},'%')
      </if>
      <if test="param_status != null and param_status != ''">
        AND t.status = #{param_status}
      </if>
      <if test="param_roleName != null and param_status != ''">
        AND r.name Like CONCAT('%',#{param_roleName},'%')
      </if>
      <if test="param_organizationUnitText != null and param_organizationUnitText != ''">
        AND o.organization_unit_id IN (
        SELECT
        id
        FROM
        sys_organization_unit
        WHERE
        FIND_IN_SET(
        id,
        func_GetChildrenIdByOrganizationUnitId (
        #{param_organizationUnitText}
        )
        )
        )
      </if>

    </if>
    <if test="orders != null and orders.size() > 0">
      ORDER BY t.modified_date
      <foreach collection="orders" item="order" index="index" separator="," >
        ${order}
      </foreach>
    </if>
    ORDER BY t.modified_date desc
    <if test="length > 0">
      LIMIT 0, ${length}
    </if>

  </select>
  <select id="findAllByOrganizationUnitId" resultMap="findAll_Result">
    SELECT * FROM sys_account WHERE id IN (
      SELECT account_id from sys_account_organization_unit WHERE organization_unit_id = #{organization_unit_id})
  </select>
  <select id="findAllByOrganizationUnitIdAndDefault" resultMap="findAll_Result">
    SELECT * FROM sys_account WHERE id IN (
      SELECT account_id from sys_account_organization_unit
       WHERE organization_unit_id = #{organization_unit_id} AND is_default = 1)
  </select>
  <select id="findAllByRoleId" resultMap="findAll_Result">
    select DISTINCT s.* from sys_account s , sys_account_role t where s.id = t.account_id and t.role_id=#{roleId}
   </select>

  <select id="isExist" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count" FROM sys_account WHERE id = #{id}
  </select>

  <select id="isExistName" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count" FROM sys_account WHERE Name = #{name}
  </select>

  <select id="isExistLoginNameAndGlobalName" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE Name = #{name}
  </select>

  <select id="isExistLoginName" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE login_name = #{login_name}
  </select>

  <select id="isExistGlobalName" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE global_name = #{global_name}
  </select>

  <select id="isExistDisplayName" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE display_name = #{display_name}
  </select>

  <select id="isExistCertifiedEmail" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE certified_email = #{certified_email}
  </select>

  <select id="isExistIdentityCard" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE identity_card = #{identity_card}
  </select>

  <select id="isExistCertifiedMobile" resultType="java.lang.Boolean">
    SELECT COUNT(0) AS "Count"
    FROM sys_account
    WHERE certified_telephone = #{certified_mobile}
  </select>

  <select id="loginCheck" parameterType="java.util.Map" resultMap="findOne_Result" >
    SELECT * FROM sys_account WHERE login_name = #{loginName} AND password = #{password}
  </select>
  <select id="findMaxCode" parameterType="java.util.Map" resultMap="findOne_Result" >
    SELECT * FROM sys_account WHERE code in (
      select max(code) from sys_account
    )
  </select>

  <update id="rename" parameterType="com.x3platform.membership.models.AccountInfo" >
    UPDATE sys_account SET name = #{name}, modified_date = CURRENT_TIMESTAMP WHERE id = #{id}
  </update>
  <update id="setGlobalName" >
    UPDATE sys_account SET global_name = #{globalName}, modified_date = CURRENT_TIMESTAMP WHERE id = #{id}
  </update>
  <select id="getPassword" resultType="string">
    SELECT password FROM sys_account WHERE login_name = #{loginName}
  </select>
  <update id="setPassword" >
    UPDATE sys_account SET password = #{password} WHERE id = #{id}
  </update>
  <update id="setLoginName" >
    UPDATE sys_account
    SET login_name = #{login_name}, modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <update id="setCertifiedMobile" >
    UPDATE sys_account
    SET certified_mobile = #{certified_mobile}, modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <update id="setCertifiedEmail" >
    UPDATE sys_account
    SET certified_email = #{certified_email}, modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <update id="setCertifiedAvatar" >
    UPDATE sys_account
    SET certified_avatar = #{certified_avatar}, modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <update id="setEnableEmail" >
    UPDATE sys_account
    SET enable_email = #{enable_email}, modified_date = CURRENT_TIMESTAMP
    WHERE id = #{id}
  </update>
  <update id="setStatus" >
    UPDATE sys_account SET status = #{status}, modified_date = CURRENT_TIMESTAMP WHERE id = #{id}
  </update>

  <update id="setLocking" >
    UPDATE sys_account SET locking = #{locking}, modified_date = CURRENT_TIMESTAMP WHERE id = #{id}
  </update>

  <update id="setIPAndLoginDate" parameterType="com.x3platform.membership.models.AccountInfo" >
    UPDATE sys_account SET ip = #{ip} , login_date = #{loginDate} WHERE id = #{id}
  </update>
  <select id="checkPassword" >
    SELECT COUNT(*) AS "Count" FROM sys_account T WHERE login_name = #{loginName} AND password = #{password}
  </select>
  <update id="changePassword" parameterType="com.x3platform.membership.models.AccountInfo"  >
    UPDATE sys_account SET password = #{password} WHERE login_name = #{login_name} AND password = #{original_password}
  </update>
  <update id="refresh_Table_Account" >
    UPDATE sys_account SET modified_date = CURRENT_TIMESTAMP WHERE id = #{id}
  </update>
  <update id="refresh_Table_Member" >
    UPDATE sys_Member SET modified_date = CURRENT_TIMESTAMP WHERE account_id = #{id}
  </update>
  <select id="findAllAccountByAccountName" resultMap="findAll_Result" >
    SELECT
    sa.*,
    sc.authorization_object_id
    FROM
    sys_account sa
    LEFT JOIN application_scope sc
    ON (
    sa.id = sc.authorization_object_id
    AND sc.authorization_object_type =#{authType}
    ) left join application a on (
    sc.entity_id = a.id
    )
    WHERE
    sa.STATUS = 1
    and  a.application_name = #{applicationName}
    <if test="selectKey !='' and selectKey != null ">
      and (sa.global_name like '%${selectKey}%' or  sa.name like '%${selectKey}%')
    </if>
  </select>
</mapper>
